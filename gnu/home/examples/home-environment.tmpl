;; -*- mode: scheme -*-
(use-modules (gnu home)
	     (gnu home-services)
	     (gnu home-services gnupg)
	     (gnu home-services ssh)
	     (gnu home-services version-control)
	     (gnu home-services files)
	     (gnu home-services state)
	     (gnu home-services mcron)
	     (gnu services)
	     (gnu packages)
	     (gnu packages linux)
	     (gnu packages gnupg)
	     (gnu system keyboard)
	     (guix gexp))


(define sample-he
  (home-environment
   (keyboard-layout
    (keyboard-layout "us,ru" "dvorak,"
		     #:options '("grp:win_space_toggle" "ctrl:nocaps")))

   (home-directory (getenv "HOME"))
   ;; (symlink-name ".guix-home-env")
   (packages
    (map specification->package+output
	 '("ungoogled-chromium-wayland" "ublock-origin-chromium" "nyxt")))
   (services
    (list
     (simple-service
      'set-brightness-on-first-login home-run-on-first-login-service-type
      #~(system* #$(file-append light "/bin/light") "-S" "100"))
     ;; home-state service is very experimental, use at your own risk
     (service home-state-service-type
	      (append
	       (list
		(state-rsync "/home/bob/tmp/example-rsync-state/"
			     "abcdw@olorin.lan:/var/services/homes/abcdw/tmp-state/")
		(state-git "/home/bob/tmp/talkes/"
			   "git@git.sr.ht:~abcdw/rde"))))

     (simple-service
      'test-config home-files-service-type
      (list `("config/test.conf"
              ,(plain-file "tmp-file.txt" "hehe"))))

     (service home-git-service-type
	      (home-git-configuration
	       (config
		`((http "https://weak.example.com"
			((ssl-verify . #f)))
		  (gpg
		   ((program . ,(file-append gnupg "/bin/gpg"))))
		  (sendmail
		   ((annotate . #t)))))))

     (service home-mcron-service-type
              (home-mcron-configuration
               (jobs
		(list
                 #~(job
		    next-minute-from
                    (lambda ()
                      (call-with-output-file
			  (string-append (getenv "HOME") "/tmp-mcron-test-file")
                        (lambda (port)
                          (display "Mcron service" port)))))))))
     (service home-ssh-service-type
	      (home-ssh-configuration
	       (extra-config
		(list
		 (ssh-host "savannah"
			   '((compression . #f)))))))
     (service home-gnupg-service-type
	      (home-gnupg-configuration
	       (gpg-agent-config
		(home-gpg-agent-configuration
		 (ssh-agent? #t)))))))))

sample-he
